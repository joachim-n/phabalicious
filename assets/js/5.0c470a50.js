(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{406:function(e,t,a){e.exports=a.p+"assets/img/deploy-command.2851accd.png"},407:function(e,t,a){e.exports=a.p+"assets/img/commands-and-tasks.b7ca9fdb.png"},408:function(e,t,a){e.exports=a.p+"assets/img/deploy-task.10e96f6f.png"},434:function(e,t,a){"use strict";a.r(t);var o=a(55),n=Object(o.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"introduction-and-overall-architecture"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#introduction-and-overall-architecture"}},[e._v("#")]),e._v(" Introduction and overall architecture")]),e._v(" "),o("h2",{attrs:{id:"introduction"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),o("p",[e._v("Phabalicious stores "),o("strong",[e._v("all project related configuration for tooling and setup in a single place")]),e._v(" per project, the so-called "),o("code",[e._v("fabfile.yaml")]),e._v(" which lives in the root-folder of a project. It documents all available installations of a given application (e.g. local, dev-, stage- and prod-instances)")]),e._v(" "),o("p",[e._v('Phabalicious "knows" '),o("strong",[e._v("how to interact with certain types of applications")]),e._v(" like drupal, laravel etc. and offers the developer a handful of useful commands to interact with these applications like deploying a new version of the application to a remote instance, getting a database from a dev-environment or getting a shell on a remote instance "),o("strong",[e._v("regardless where the application is hosted")]),e._v(".")]),e._v(" "),o("p",[e._v("Phabalicious knows also "),o("strong",[e._v("how to handle the evironment")]),e._v(" which is hosting the application, be it your local computer, a dockerized environment, a remote server or a Kubernetes cluster. That helps the developer to control the application.")]),e._v(" "),o("p",[e._v("Phabalicious' "),o("strong",[e._v("open architecture and its flexibility makes it easy to extend the core functionality")]),e._v(" to support hard-to-integrate environments e.g. ssh jump hosts, docker on remote instances, etc. "),o("strong",[e._v("The scaffolding system helps generating host-specific configuration files")]),e._v(" e.g. for docker-compose or Kubernetes or by scaffolding whole new projects.")]),e._v(" "),o("p",[e._v("Phabalicious can be used with a multitude of applications, hosting environments and can be tightly integrated with e.g. Continuous Deployment Tooling.")]),e._v(" "),o("p",[e._v("Inheritance and remote configuration files allow teams to store configuration centrally and override and extend it on a per project- and host-level which helps in minimizing outdated configuration.")]),e._v(" "),o("h2",{attrs:{id:"architecture"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#architecture"}},[e._v("#")]),e._v(" Architecture")]),e._v(" "),o("h3",{attrs:{id:"naming-things"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#naming-things"}},[e._v("#")]),e._v(" Naming things")]),e._v(" "),o("p",[e._v("Phabalicous uses a custom naming convention to differentiate things better. Here's a short explanation:")]),e._v(" "),o("ul",[o("li",[e._v("A "),o("em",[e._v("host")]),e._v(" is an entry in the fabfile under the "),o("code",[e._v("hosts")]),e._v("-section which encapsulates all configuration under a unique name.")]),e._v(" "),o("li",[e._v("A "),o("em",[e._v("command")]),e._v(" is the command you execute by running phab, e.g. "),o("code",[e._v("phab list:hosts")]),e._v(". Here the "),o("em",[e._v("command")]),e._v(" is "),o("code",[e._v("list:hosts")]),e._v(". A "),o("em",[e._v("command")]),e._v(" is usually executed against a given "),o("em",[e._v("host")]),e._v("-configuration")]),e._v(" "),o("li",[e._v("Every "),o("em",[e._v("host")]),e._v(" declares a list of "),o("code",[e._v("needs")]),e._v(". A need will be fullfilled by an existing "),o("em",[e._v("method")]),e._v(" implemented by phabalicious. One "),o("em",[e._v("host")]),e._v(" might need the functionality of the "),o("code",[e._v("script")]),e._v("-method, and of the "),o("code",[e._v("ssh")]),e._v("-method. "),o("RouterLink",{attrs:{to:"/configuration.html#needs"}},[e._v("Here's")]),e._v(" a list of all implemented methods")],1),e._v(" "),o("li",[e._v("Some methods provide a "),o("em",[e._v("shell-provider")]),e._v('. A shell provider knows "how" to get a shell for a '),o("em",[e._v("host")]),e._v(", e.g. by starting a ssh-connection.")]),e._v(" "),o("li",[e._v("Every "),o("em",[e._v("method")]),e._v(" requires different config-parameters from the "),o("em",[e._v("host")]),e._v("-configuration, which will be validated on startup.")]),e._v(" "),o("li",[e._v("Every "),o("em",[e._v("command")]),e._v(" will execute one or multiple "),o("em",[e._v("tasks")]),e._v(". Every needed "),o("em",[e._v("method")]),e._v(" can now react to a given "),o("em",[e._v("task")]),e._v(" and do its work. Every enabled "),o("em",[e._v("method")]),e._v(" will also be consulted when preparing the execution of a task, and when the task is finished.")])]),e._v(" "),o("h3",{attrs:{id:"how-a-command-is-executed"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#how-a-command-is-executed"}},[e._v("#")]),e._v(" How a command is executed")]),e._v(" "),o("p",[e._v("Here's a series of diagrams showcasing what happens exactly behind the scenes when executing the "),o("em",[e._v("command")]),e._v(" "),o("code",[e._v("deploy")]),e._v("  with the following host-config:")]),e._v(" "),o("div",{staticClass:"language-yaml extra-class"},[o("pre",{pre:!0,attrs:{class:"language-yaml"}},[o("code",[o("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("hosts")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),o("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("test")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),o("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("needs")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n\t  "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" ssh\n\t  "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" git\n\t  "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" mysql\n\t  "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" script\n    "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("...")]),e._v("\n")])])]),o("ol",[o("li",[e._v("Check if a backup is required")]),e._v(" "),o("li",[e._v("Run the "),o("em",[e._v("task")]),e._v(" "),o("code",[e._v("deploy")]),e._v(" and "),o("code",[e._v("reset")]),e._v(" against all needed "),o("em",[e._v("methods")])])]),e._v(" "),o("p",[o("img",{attrs:{src:a(406),alt:"The deploy command"}})]),e._v(" "),o("p",[e._v("A closer look into how "),o("em",[e._v("tasks")]),e._v(" are executed with "),o("em",[e._v("methods")]),e._v(".")]),e._v(" "),o("ol",[o("li",[e._v("First run the "),o("code",[e._v("deployPrepare")]),e._v("-"),o("em",[e._v("task")]),e._v(" against all needed methods")]),e._v(" "),o("li",[e._v("Run the "),o("code",[e._v("deploy")]),e._v("-"),o("em",[e._v("task")]),e._v(" against all needed methods")]),e._v(" "),o("li",[e._v("Finally run the "),o("code",[e._v("deployFinished")]),e._v("-"),o("em",[e._v("task")]),e._v(" against all needed methods")]),e._v(" "),o("li",[e._v("Do the same for the "),o("code",[e._v("reset")]),e._v("-"),o("em",[e._v("task")])])]),e._v(" "),o("p",[o("img",{attrs:{src:a(407),alt:"Commands, tasks and methods"}})]),e._v(" "),o("p",[e._v("Let's zoom into the "),o("code",[e._v("deploy")]),e._v("-task:")]),e._v(" "),o("p",[o("img",{attrs:{src:a(408),alt:"the deploy task"}})]),e._v(" "),o("p",[e._v("This should give you an overall idea how things are connected in phabalicious. Also with this approach it is very easy to combine different methods together (e.g. a "),o("code",[e._v("laravel")]),e._v("-application with a "),o("code",[e._v("sqlite")]),e._v("-database) and to extend the functionality with custom scripts.")]),e._v(" "),o("h3",{attrs:{id:"the-fabfile-yaml"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#the-fabfile-yaml"}},[e._v("#")]),e._v(" The fabfile.yaml")]),e._v(" "),o("p",[e._v("The fabfile is the central place for all project related configurations. It "),o("RouterLink",{attrs:{to:"/inheritance.html"}},[e._v("can inherit configuration")]),e._v(" from local and remote files to include centralized configuration very easily which helps a team to prevent copy-paste which leads to outdated configurations on the long run. Local overrides allow the developer to adapt the global project configuration to his particular needs.")],1),e._v(" "),o("p",[e._v("The fabfile contains also all "),o("RouterLink",{attrs:{to:"/scripts.html"}},[e._v("custom scripts")]),e._v(" which can use pattern-replacements to inject configuration values into the running script to enhance reusability of code. Scripts can also be invoked before, on, or after the execution of specific "),o("em",[e._v("tasks")]),e._v(".")],1),e._v(" "),o("h3",{attrs:{id:"the-scaffolder"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#the-scaffolder"}},[e._v("#")]),e._v(" The scaffolder")]),e._v(" "),o("p",[e._v("Phabalicious contains a powerful "),o("RouterLink",{attrs:{to:"/scaffolder.html"}},[e._v("scaffolder")]),e._v(", which can support the developer in creating "),o("RouterLink",{attrs:{to:"/app-scaffold.html"}},[e._v("new projects")]),e._v(" from scratch, alter existing projects in a given way or create tailored configuration- or definition-files for other tools like "),o("code",[e._v("docker-compose")]),e._v(" or "),o("code",[e._v("kubectl")]),e._v(". The twig-template-engine allow the developer to inject specifc configuration into the scaffolded files.")],1)])}),[],!1,null,null,null);t.default=n.exports}}]);